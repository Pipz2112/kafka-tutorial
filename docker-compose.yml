services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_SYNC_LIMIT: 5
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    command: >
      /bin/bash -c "
        /etc/confluent/docker/run &
        sleep 20 &&
        kafka-topics --create --topic connect-configs --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --config cleanup.policy=compact &&
        kafka-topics --create --topic connect-offsets --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --config cleanup.policy=compact &&
        kafka-topics --create --topic connect-statuses --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --config cleanup.policy=compact &&
        wait"

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.5.0
    container_name: control-center
    depends_on:
      - kafka
      - ksqldb-server
      - schema-registry
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:9092
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'http://connect:8083'
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_CONNECT_CLUSTER: connect:8083
      CONTROL_CENTER_KAFKA_CONNECT_CLUSTER: connect:8083
      CONTROL_CENTER_KSQL_KSQLDB1_URL: http://ksqldb-server:8088
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: http://localhost:8088
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONTROL_CENTER_REPLICATION_FACTOR: 1
    ports:
      - "9021:9021"

  connect:
    image: confluentinc/cp-kafka-connect:7.5.0
    container_name: connect
    depends_on:
      - kafka
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_GROUP_ID: "connect-cluster"
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-statuses
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_PLUGIN_PATH: "/usr/share/java"
    ports:
      - "8083:8083"
    volumes:
      - ./connect-plugins:/tmp/connect-plugins
    command: >
      /bin/bash -c "
        if [ ! -d /usr/share/java/cp-base-new ]; then
            mkdir -p /usr/share/java/cp-base-new;
        fi;
        tar -xvzf /tmp/connect-plugins/confluentinc-kafka-connect-jdbc-10.8.0.tar.gz -C /usr/share/java/cp-base-new;
        /etc/confluent/docker/run
        "

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: schema-registry
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENER: http://0.0.0.0:8081
    ports:
      - "8081:8081"

  ksqldb-server:
    image: confluentinc/ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka
      - schema-registry
    environment:
      KSQL_SERVER_LISTENER_HTTP_PORT: 8088
      KSQL_SERVER_LISTENER_HTTP_ADVERTISED_URL: http://localhost:8088
      KSQL_STREAMS_CONSUMER_BACKOFF_MS: 5000
      KSQL_STREAMS_CONSUMER_TIMEOUT_MS: 60000
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    ports:
      - "8088:8088"

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.5.0
    container_name: rest-proxy
    ports:
        - "8082:8082"
    environment:
        KAFKA_REST_BOOTSTRAP_SERVERS: "kafka:9092"
        KAFKA_REST_HOST_NAME: "rest-proxy"
        KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
        KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
    depends_on:
        - kafka
        - schema-registry

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: example_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
        - mysql-data:/var/lib/mysql
        - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  mysql-data:
